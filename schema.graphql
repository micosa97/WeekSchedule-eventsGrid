input ExchangeCodeForAuthTokenInput {
  provider: String!
  accessCode: String!
  clientMutationId: String
}

type ExchangeCodeForAuthTokenPayload {
  userId: Int
  token: String
  clientMutationId: String
}

type Mutation {
  exchangeCodeForAuthToken(input: ExchangeCodeForAuthTokenInput!): ExchangeCodeForAuthTokenPayload
  removeAuthToken(input: RemoveAuthTokenInput!): RemoveAuthTokenPayload
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

type Query {
  hello(message: String!): String

  # Fetches an object given its ID
  node(id: ID!): Node

  # Fetches objects given their IDs
  nodes(ids: [ID!]!): [Node]!
}

input RemoveAuthTokenInput {
  userId: String!
  token: String!
  clientMutationId: String
}

type RemoveAuthTokenPayload {
  clientMutationId: String
}